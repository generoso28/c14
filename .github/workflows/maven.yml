name: CI Pipeline para Leitor de PDF em Java

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  # Job 1: Executa os testes unitários e gera o relatório
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 24 e Cache do Maven
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Executar testes e gerar relatório
        run: mvn -B test site

      - name: Armazenar relatório de testes
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-testes
          path: target/site

  # Job 2: Compila e empacota a aplicação (executa em paralelo com run_tests)
  package_application:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 24 e Cache do Maven
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Empacotar a aplicação (Build)
        run: mvn -B package -DskipTests

      - name: Armazenar pacote JAR
        uses: actions/upload-artifact@v4
        with:
          name: pacote-jar
          path: target/*.jar

  # Job 3: Envia notificação após a conclusão dos jobs anteriores
  send_notification:
    # Garante que este job só execute após os outros dois terminarem
    needs: [run_tests, package_application]
    # "if: always()" garante que a notificação seja enviada mesmo se um dos jobs falhar
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Enviar notificação por e-mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          subject: >-
            ${{ needs.run_tests.result == 'success' && needs.package_application.result == 'success' && '✅ Sucesso:
              Pipeline concluído' || '❌ Falha: Pipeline com erro' }}
          to: ${{ secrets.EMAIL_RECIPIENT }}
          from: "CI Pipeline <no-reply@github.com>"
          body: |
            Repositório: ${{ github.repository }}
            Commit: ${{ github.sha }}
            Status dos testes: ${{ needs.run_tests.result }}
            Status do build: ${{ needs.package_application.result }}
            Veja os logs em: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
